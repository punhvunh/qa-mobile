plugins {
    id 'java'
    id "io.qameta.allure" version "2.10.0"
}

group 'org.example'
version '1.0-SNAPSHOT'

def allureVersion = "2.12.1",
    junitJupiterVersion = "5.8.2",
    junitVersion = "4.13.2",
    slf4jVersion = "1.7.32"


dependencies {
    testImplementation(
            "junit:junit:$junitVersion",
            "io.qameta.allure:allure-junit5:$allureVersion",
            "com.codeborne:selenide:5.25.0",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.appium:java-client:7.6.0",
            "org.aeonbits.owner:owner:1.0.12",
            "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion",
            "org.junit.jupiter:junit-jupiter-params:5.9.3",
            "org.aspectj:aspectjweaver:1.9.5",
            "io.qameta.allure:allure-commandline:2.12.1",
            "io.qameta.allure:allure-assertj:2.12.1",
            "io.qameta.allure:allure-rest-assured:2.12.1",
            "io.qameta.allure:allure-java-commons:2.12.1")
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion")
}

allure {
    version = allureVersion
    autoconfigure = true
}

test {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "failed"
            exceptionFormat "short"
        }
    }
}